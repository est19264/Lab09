$date
	Sat Oct 31 01:26:37 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 4 ! O3 [3:0] $end
$var wire 2 " O2 [1:0] $end
$var wire 1 # O1 $end
$var reg 1 $ I1 $end
$var reg 2 % I2 [1:0] $end
$var reg 4 & I3 [3:0] $end
$var reg 1 ' clk $end
$var reg 1 ( enabled $end
$var reg 1 ) reset $end
$scope module R1 $end
$var wire 1 $ I1 $end
$var wire 1 ) clk $end
$var wire 1 ( enabled $end
$var wire 1 ' reset $end
$var reg 1 # O1 $end
$upscope $end
$scope module R2 $end
$var wire 2 * I2 [1:0] $end
$var wire 1 ) clk $end
$var wire 1 ( enabled $end
$var wire 1 ' reset $end
$var wire 2 + O2 [1:0] $end
$scope module B1 $end
$var wire 1 , I1 $end
$var wire 1 ' clk $end
$var wire 1 ( enabled $end
$var wire 1 ) reset $end
$var reg 1 - O1 $end
$upscope $end
$scope module B2 $end
$var wire 1 . I1 $end
$var wire 1 ' clk $end
$var wire 1 ( enabled $end
$var wire 1 ) reset $end
$var reg 1 / O1 $end
$upscope $end
$upscope $end
$scope module R3 $end
$var wire 4 0 I3 [3:0] $end
$var wire 1 ) clk $end
$var wire 1 ( enabled $end
$var wire 1 ' reset $end
$var wire 4 1 O3 [3:0] $end
$scope module C1 $end
$var wire 2 2 I2 [1:0] $end
$var wire 1 ' clk $end
$var wire 1 ( enabled $end
$var wire 1 ) reset $end
$var wire 2 3 O2 [1:0] $end
$scope module B1 $end
$var wire 1 4 I1 $end
$var wire 1 ) clk $end
$var wire 1 ( enabled $end
$var wire 1 ' reset $end
$var reg 1 5 O1 $end
$upscope $end
$scope module B2 $end
$var wire 1 6 I1 $end
$var wire 1 ) clk $end
$var wire 1 ( enabled $end
$var wire 1 ' reset $end
$var reg 1 7 O1 $end
$upscope $end
$upscope $end
$scope module C2 $end
$var wire 2 8 I2 [1:0] $end
$var wire 1 ' clk $end
$var wire 1 ( enabled $end
$var wire 1 ) reset $end
$var wire 2 9 O2 [1:0] $end
$scope module B1 $end
$var wire 1 : I1 $end
$var wire 1 ) clk $end
$var wire 1 ( enabled $end
$var wire 1 ' reset $end
$var reg 1 ; O1 $end
$upscope $end
$scope module B2 $end
$var wire 1 < I1 $end
$var wire 1 ) clk $end
$var wire 1 ( enabled $end
$var wire 1 ' reset $end
$var reg 1 = O1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x=
0<
x;
0:
bx 9
b0 8
x7
06
x5
04
bx 3
b0 2
bx 1
b0 0
x/
0.
x-
0,
bx +
b0 *
0)
0(
0'
b0 &
b0 %
0$
x#
bx "
bx !
$end
#1
0#
05
b0 3
07
0;
b0 !
b0 1
b0 9
0=
1'
#2
0'
#3
0/
b0 "
b0 +
0-
1'
1)
#4
0'
#5
1'
#6
0'
0)
#7
1'
#8
0'
#9
1'
#10
0'
#11
1'
1(
#12
0'
#13
1'
#14
0'
#15
1'
#16
14
b1 2
1,
0'
b1 &
b1 0
b1 %
b1 *
1$
#17
b1 "
b1 +
1-
1'
#18
0'
#19
1'
#20
0'
#21
b11 "
b11 +
1/
1:
b1 8
1.
1'
b101 &
b101 0
b11 %
b11 *
#22
0'
#23
1'
#24
0'
#25
1'
#26
0:
1<
b10 8
0,
0'
b1001 &
b1001 0
b10 %
b10 *
#27
b10 "
b10 +
0-
1'
#28
0'
#29
1'
#30
0'
#31
1'
0$
#32
0'
#33
1'
#34
0'
#35
1'
